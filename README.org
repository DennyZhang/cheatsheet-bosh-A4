* Bosh CheatSheet                                                    :VMware:
:PROPERTIES:
:type:     pivotal, pks, vmware
:export_file_name: cheatsheet-bosh-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet-bosh-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet-bosh-A4/blob/master/cheatsheet-bosh-A4.pdf][cheatsheet-bosh-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/tools/][tools]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-bosh-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-pks-A4][PKS CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4][Tile CheatSheet]]

File me [[https://github.com/DennyZhang/cheatsheet-bosh-A4/issues][Issues]] or star [[https://github.com/DennyZhang/cheatsheet-bosh-A4][this repo]].

See more CheatSheets from Denny: [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]
** Bosh Frequent-Used
| Name                                                 | Command                                                          |
|------------------------------------------------------+------------------------------------------------------------------|
| List tasks                                           | =bosh -d <deployment> tasks -ar=, =bosh tasks -r=10=             |
| List deployments and vms                             | =bosh deployments=, =bosh -d <deployment> vms=                   |
| Bosh get current task details                        | =bosh -d <deployment> task -a --debug=                           |
| Get task detail log, especially errand stdout/stderr | =bosh -d <deployment> task $id --debug=                          |
| Run errand, and avoid deleting the vms               | =bosh -n -d <deployment> run-errand <errand_name> --keep-alive=  |
| Common Bosh Releases                                 | [[https://github.com/cloudfoundry-incubator/kubo-release][kubo-release]], [[https://github.com/cloudfoundry-incubator/cfcr-etcd-release][cfcr-etcd-release]], [[https://github.com/cloudfoundry-incubator/docker-boshrelease][docker-boshrelease]], [[https://github.com/cloudfoundry-incubator/pxc-release][pxc-release]] |
| Reference                                            | [[https://cheatsheet.dennyzhang.com/cheatsheet-bosh-A4][Bosh CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4][Tile CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-uaa-A4][UAA CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-pks-A4][PKS CheatSheet]] |

[[https://cheatsheet.dennyzhang.com/cheatsheet-bosh-A4][https://raw.githubusercontent.com/dennyzhang/cheatsheet-bosh-A4/master/bosh-workflow.jpg]]

** Bosh vs Kubernetes
| Bosh - VM Lifecycle Management | Kubernetes - Container Lifecycle Management      |
|--------------------------------+--------------------------------------------------|
| =Bosh Envs=                    | =Kubernetes Context=                             |
| =Bosh Deployment=              | =Kubernetes Deployment=                          |
| =Bosh Stemcell=                | =Docker Image=                                   |
| =Bosh Manifest=                | =Kubernetes Configmap & Yaml=                    |
| =Bosh Monit=                   | =Kubernetes Kubelet=                             |
| =Bosh Errand=                  | =Kubernetes Job=                                 |
| =Bosh Release=                 | =Kubernetes Chart=                               |
| =Bosh Tile=                    | =Kubernetes Helm=                                |
| =Bosh Director=                | =Kubernetes API server=                          |
| =Bosh Event=                   | =Kubernetes Event=                               |
| =Bosh Task=                    |                                                  |
| =Bosh Agent=                   |                                                  |
| =Bosh Addon=                   |                                                  |
| =Bosh Ops manager=             | No related feature: UI to customize your service |
** Bosh Challenges
| Name                       | Comment                                                   |
|----------------------------+-----------------------------------------------------------|
| More declarative           | End users define requirements via =yaml files=            |
| More lightweight           | Use =containers=, instead of =VMs= to run errands         |
| Support rolling upgrade    | Just like =kubectl rollout=                               |
| Retry a failed errand/task | Currently we can do it. But it's a lengthy manual process |
| Support =tail -f=          | Personally I don't like the way of =bosh logs=            |
** Bosh Concepts List
| Name               | Comment                                                                                   |
|--------------------+-------------------------------------------------------------------------------------------|
| Reference          | [[https://bosh.io/docs/terminology][Link: terminology]], [[https://github.com/cloudfoundry/bosh][GitHub: cloudfoundry/bosh]], [[https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4][CheatSheet: Cloudfoundry Tile & OpsManager]]  |
| Reference          | [[https://www.youtube.com/watch?v=l91q00Vu2h8][YouTube: BOSH Release]]                                                                     |
| [[https://bosh.cloudfoundry.org/stemcells/][Bosh Stemcells]]     | A versioned Operating System image. [[https://network.pivotal.io/][Download stemcell]]                                     |
| [[https://bosh.io/docs/terminology/#deployment][Bosh Deployment]]    | An encapsulation of software and configuration that BOSH can deploy to the cloud.         |
| [[https://bosh.io/docs/release/][Bosh Release]]       | Everything needed to make a software component deployable by BOSH.                        |
| [[https://bosh.io/docs/jobs/][Bosh Job]]           | Each release job represents a specific chunk of work that the release performs.           |
| [[https://bosh.io/docs/terminology/#package][Bosh Package]]       | It contains vendored in software source and scripts to compile it.                        |
| [[https://bosh.io/docs/errands/][Bosh Errand]]        | A short-lived job that can be triggered by an operator any time after the deploy.         |
|--------------------+-------------------------------------------------------------------------------------------|
| [[https://docs.pivotal.io/tiledev/2-2/tile-structure.html][Bosh Tile]]          | A *.pivotal file with everything needed to install/upgrade a PCF service. [[https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4][Tile CheatSheet]] |
| [[https://bosh.io/docs/terminology/#manifest][Bosh Manifest]]      | A YAML file that identifies one or more releases, stemcells and configurations            |
| [[https://bosh.io/docs/terminology/#operations-file][Bosh ops file]]      | A YAML file that includes multiple operations to be applied to a different YAML file.     |
| [[https://bosh.io/docs/terminology/#event][Bosh Event]]         | Actions taken by the Director (via user or system control) are recorded as events         |
|--------------------+-------------------------------------------------------------------------------------------|
| Bosh Director      | The Director is the orchestrator of deployments.                                          |
| Bosh Addon         | A release job that is colocated on all VMs managed by the Director.                       |
| Bosh Agent         | A process that runs continuously on each VM that BOSH deploys. one Agent process per VM   |
| Bosh Jumpbox       | A VM that acts as a single access point for the Director and deployed VMs.                |
| [[https://bosh.io/docs/release-blobs/][Director Blobstore]] | A repository where BOSH stores release artifacts, logs, stemcells, and other content, etc |
| Cloud ID (CID)     | ID returned from the Cloud identifying particular resource such as VM or disk.            |
** Bosh Basic
| Name                      | Command                                                                    |
|---------------------------+----------------------------------------------------------------------------|
| [[https://bosh.io/docs/cli-v2/][bosh]]                      | =apt install bosh-cli=, =/var/vcap/bosh/log=                               |
| [[https://bosh.io/docs/cli-int/][Interpolates variables]]    | =bosh int /tmp/build/4dcXX/pks-lock/metadata --path=/ops_manager/username= |
| Delete a deployment       | =bosh delete-deployment -d $deployment=                                    |
| List all bosh deployments | =bosh -n deployments=, =bosh -n deployments --json=                        |
| Download log files        | =bosh -d <deployment>_id logs=                                             |
| Show deployment manifest  | =bosh manifest -d <deployment>=                                            |
| bosh config               | =bosh cloud-config=, =bosh configs=                                        |
| List environment          | =bosh env=, =bosh env --json=, =bosh envs=                                 |
| List all instances        | =bosh instances=                                                           |
| Get vms per deployment    | =bosh -e $env -d <deployment> vms=, =bosh instances=                       |
| Cloud consistency check   | =bosh cloud-check -d <deployment>=                                         |
| List disks                | =bosh disks -o=                                                            |
** Bosh VM
| Name                       | Command                                                                       |
|----------------------------+-------------------------------------------------------------------------------|
| List vms                   | =bosh -d <deployment> vms=                                                    |
| List vms with verbose info | =bosh -d <deployment> vms --vitals=                                           |
| Delete a vm                | =bosh -d <deployment> delete-vm <vm-name>/<GUID>=                             |
| SSH to vm                  | =bosh -e <env> -d <deployment> ssh <vm-name>/<GUID>=                          |
| Run SSH commands           | =bosh -e <env> -d <deployment> ssh <vm-name>/<GUID> -c "sudo cat /etc/hosts"= |
** Bosh Deployment
| Name                          | Command                                             |
|-------------------------------+-----------------------------------------------------|
| List bosh deployments         | =bosh deployments=                                  |
| Delete bosh deployment        | =bosh -n -d <deployment> delete-deployment --force= |
| Get deployment manifest yaml  | =bosh manifest -d <deployment> > my.yaml=           |
| Run bosh deployment from yaml | =bosh deploy -d <deployment> my.yaml=               |
** Bosh Task
| Name                          | Command                                    |
|-------------------------------+--------------------------------------------|
| List recent tasks             | =bosh -d <deployment> tasks --recent=      |
| List all tasks                | =bosh -d <deployment> tasks -ar=           |
| Attach to current task        | =bosh -d <deployment> task -a=             |
| Get task by id                | =bosh -d <deployment> task $id=            |
| Get task detail msg           | =bosh -d <deployment> task $id --debug=    |
| Get all logs for a deployment | =bosh -d <deployment> logs=                |
| Get log for one vm            | =bosh -d <deployment> logs $instance_name= |
| List bosh events              | =bosh events=                              |
** Bosh Job - Skeleton
| Name      | Command                                  |
|-----------+------------------------------------------|
| Reference | [[https://github.com/cloudfoundry-incubator/kubo-release/tree/master/jobs][Example: kubo-release/jobs]]               |
| provides  | Export resources for other bosh releases |
| consumes  | Use resources from other bosh releases   |
| packages  | Packages get installed by bosh           |
| templates | Conf files                               |
** Bosh Errand
| Name                                  | Command                                                                              |
|---------------------------------------+--------------------------------------------------------------------------------------|
| List errands                          | =bosh errands -d <deployment>=                                                       |
| Run errand in a new vm                | =bosh -n -d <deployment> run-errand <errand_name>=  [[https://bosh.io/docs/cli-v2/#run-errand][Link: run-errand]]                 |
| Run errand in a new vm with env alive | =bosh -n -d <deployment> run-errand <errand_name> --keep-alive=                      |
| Run errand in an existing vm          | =bosh -n -d <deployment> run-errand <errand_name> --instance=worker/instance-id=XXX= |
** Bosh Blob
| Name                   | Command                                                                                                          |
|------------------------+------------------------------------------------------------------------------------------------------------------|
| Reference              | [[https://bosh.io/docs/release-blobs/][Link: Working with Blobs]]                                                                                         |
| Configure credential   | If you need to upload/download with S3/GCP buckets, make sure =config/private.yml= has been configured correctly |
| Add local file to blob | =bosh add-blob /tmp/<telegraf:1.7-alpine.tgz> container-images/telegraf:1.7-alpine.tgz=                          |
| Upload blobs           | =bosh upload-blobs=, make sure =config/private.yml= is correct. blobs.yml will be automatically updated          |
** Bosh Release - Basic
| Name                   | Command                                                                                    |
|------------------------+--------------------------------------------------------------------------------------------|
| List release           | =bosh -n releases=                                                                         |
| Release folder         | =/var/tempest/releases=                                                                    |
| Create a local release | =bosh create-release --tarball=myrelease-0.4.0.tgz=                                        |
| Inspect a release      | =bosh inspect-release <my-release>/<release-version>=                                      |
| Export a release       | =bosh -d <deployment> export-release <my-release>/<release-version> ubuntu-trusty/3586.36= |
| Delete release         | =bosh -n delete-release <my-release>/<release-version> --force=                            |
| Upload release         | =bosh -n upload-release /tmp/my-release-0.22.0.tgz=                                        |
| Reset release          | =bosh reset-release= [[https://github.com/cloudfoundry/bosh-cli/issues/28][GitHub ticket]]                                                         |
** Bosh Release - Creation
| Name             | Command                                             |
|------------------+-----------------------------------------------------|
| Reference        | [[https://bosh.io/docs/cli-v2/#release-creation][Link: Release creation]]                              |
| Create a release | =bosh create-release --tarball /tmp/my-release.tgz= |
** Bosh Manifest
| Name               | Command                                        |
|--------------------+------------------------------------------------|
| Show bosh manifest | =bosh manifest -d <deployment>= [[https://bosh.io/docs/cli-v2#manifest][Link: manifest]] |
** Bosh Stemcell
| Name              | Command                                                                                         |
|-------------------+-------------------------------------------------------------------------------------------------|
| [[https://docs.pivotal.io/pivotalcf/2-3/customizing/understanding-stemcells.html][Floating stemcell]] | Floating stemcells allow upgrade to the minor versions of stemcells but not the major versions. |
| Upload stemcell   | =bosh -n upload-stemcell /tmp/stemcell.tgz=                                                     |
| List stemcells    | =bosh -n stemcells=                                                                             |
| Delete a stemcell | =bosh delete-stemcell <stemcell-name>/<stemcell-version>=                                       |
** Bosh Monit
| Name                                | Comment                        |
|-------------------------------------+--------------------------------|
| List bosh deployed daemon processes | =sudo su -=, =monit summary=   |
| Restart a given daemon processes    | =monit restart <process_name>= |
** Bosh Tools
| Name                        | Comment                                                                                         |
|-----------------------------+-------------------------------------------------------------------------------------------------|
| [[https://docs.cloudfoundry.org/bbr/][bbr]] bosh-backup-and-restore | a framework for backing up and restoring BOSH deployments and BOSH Directors.                   |
| [[https://github.com/cloudfoundry/bosh-bootloader][bbl]] bosh-bootloader         | a command line utility for standing up BOSH on multi-clouds                                     |
| [[https://github.com/cloudfoundry-incubator/bpm-release][bpm]] BOSH process manager    | isolation of BOSH jobs to make they run on many different work schedulers instead of monit only |
** Online Help Usage
#+BEGIN_EXAMPLE
 kubo@jumper:~$ bosh --help
 Usage:
   bosh [OPTIONS] <command>

 Application Options:
   -v, --version          Show CLI version
       --config=          Config file path (default: ~/.bosh/config) [$BOSH_CONFIG]
   -e, --environment=     Director environment name or URL [$BOSH_ENVIRONMENT]
       --ca-cert=         Director CA certificate path or value [$BOSH_CA_CERT]
       --sha2             Use SHA256 checksums [$BOSH_SHA2]
       --parallel=        The max number of parallel operations (default: 5)
       --client=          Override username or UAA client [$BOSH_CLIENT]
       --client-secret=   Override password or UAA client secret [$BOSH_CLIENT_SECRET]
   -d, --deployment=      Deployment name [$BOSH_DEPLOYMENT]
       --column=          Filter to show only given column(s)
       --json             Output as JSON
       --tty              Force TTY-like output
       --no-color         Toggle colorized output
   -n, --non-interactive  Don't ask for user input [$BOSH_NON_INTERACTIVE]

 Help Options:
   -h, --help             Show this help message

 Available commands:
   add-blob               Add blob                                           https://bosh.io/docs/cli-v2#add-blob
   alias-env              Alias environment to save URL and CA certificate   https://bosh.io/docs/cli-v2#alias-env
   attach-disk            Attaches disk to an instance                       https://bosh.io/docs/cli-v2#attach-disk
   blobs                  List blobs                                         https://bosh.io/docs/cli-v2#blobs
   cancel-task            Cancel task at its next checkpoint                 https://bosh.io/docs/cli-v2#cancel-task (aliases: ct)
   clean-up               Clean up releases, stemcells, disks, etc.          https://bosh.io/docs/cli-v2#clean-up
   cloud-check            Cloud consistency check and interactive repair     https://bosh.io/docs/cli-v2#cloud-check (aliases: cck, cloudcheck)
   cloud-config           Show current cloud config                          https://bosh.io/docs/cli-v2#cloud-config (aliases: cc)
   config                 Show current config for either ID or both type and name https://bosh.io/docs/cli-v2#config (aliases: c)
   configs                List configs                                       https://bosh.io/docs/cli-v2#configs (aliases: cs)
   cpi-config             Show current CPI config                            https://bosh.io/docs/cli-v2#cpi-config
   create-env             Create or update BOSH environment                  https://bosh.io/docs/cli-v2#create-env
   create-release         Create release                                     https://bosh.io/docs/cli-v2#create-release (aliases: cr)
   delete-config          Delete config                                      https://bosh.io/docs/cli-v2#delete-config (aliases: dc)
   delete-deployment      Delete deployment                                  https://bosh.io/docs/cli-v2#delete-deployment (aliases: deld)
   delete-disk            Delete disk                                        https://bosh.io/docs/cli-v2#delete-disk
   delete-env             Delete BOSH environment                            https://bosh.io/docs/cli-v2#delete-env
   delete-release         Delete release                                     https://bosh.io/docs/cli-v2#delete-release (aliases: delr)
   delete-snapshot        Delete snapshot                                    https://bosh.io/docs/cli-v2#delete-snapshot
   delete-snapshots       Delete all snapshots in a deployment               https://bosh.io/docs/cli-v2#delete-snapshots
   delete-stemcell        Delete stemcell                                    https://bosh.io/docs/cli-v2#delete-stemcell (aliases: dels)
   delete-vm              Delete VM                                          https://bosh.io/docs/cli-v2#delete-vm
   deploy                 Update deployment                                  https://bosh.io/docs/cli-v2#deploy (aliases: d)
   deployment             Show deployment information                        https://bosh.io/docs/cli-v2#deployment (aliases: dep)
   deployments            List deployments                                   https://bosh.io/docs/cli-v2#deployments (aliases: ds, deps)
   diff-config            Diff two configs by ID                             https://bosh.io/docs/cli-v2#diff-config
   disks                  List disks                                         https://bosh.io/docs/cli-v2#disks
   environment            Show environment                                   https://bosh.io/docs/cli-v2#environment (aliases: env)
   environments           List environments                                  https://bosh.io/docs/cli-v2#environments (aliases: envs)
   errands                List errands                                       https://bosh.io/docs/cli-v2#errands (aliases: es)
   event                  Show event details                                 https://bosh.io/docs/cli-v2#event
   events                 List events                                        https://bosh.io/docs/cli-v2#events
   export-release         Export the compiled release to a tarball           https://bosh.io/docs/cli-v2#export-release
   finalize-release       Create final release from dev release tarball      https://bosh.io/docs/cli-v2#finalize-release
   generate-job           Generate job                                       https://bosh.io/docs/cli-v2#generate-job
   generate-package       Generate package                                   https://bosh.io/docs/cli-v2#generate-package
   help                   Show this help message                             https://bosh.io/docs/cli-v2#help
   ignore                 Ignore an instance                                 https://bosh.io/docs/cli-v2#ignore
   init-release           Initialize release                                 https://bosh.io/docs/cli-v2#init-release
   inspect-release        List release contents such as jobs                 https://bosh.io/docs/cli-v2#inspect-release
   instances              List all instances in a deployment                 https://bosh.io/docs/cli-v2#instances (aliases: is)
   interpolate            Interpolates variables into a manifest             https://bosh.io/docs/cli-v2#interpolate (aliases: int)
   locks                  List current locks                                 https://bosh.io/docs/cli-v2#locks
   log-in                 Log in                                             https://bosh.io/docs/cli-v2#log-in (aliases: l, login)
   log-out                Log out                                            https://bosh.io/docs/cli-v2#log-out (aliases: logout)
   logs                   Fetch logs from instance(s)                        https://bosh.io/docs/cli-v2#logs
   manifest               Show deployment manifest                           https://bosh.io/docs/cli-v2#manifest (aliases: man)
   orphan-disk            Orphan disk                                        https://bosh.io/docs/cli-v2#orphan-disk
   recreate               Recreate instance(s)                               https://bosh.io/docs/cli-v2#recreate
   releases               List releases                                      https://bosh.io/docs/cli-v2#releases (aliases: rs)
   remove-blob            Remove blob                                        https://bosh.io/docs/cli-v2#remove-blob
   repack-stemcell        Repack stemcell                                    https://bosh.io/docs/cli-v2#repack-stemcell
   reset-release          Reset release                                      https://bosh.io/docs/cli-v2#reset-release
   restart                Restart instance(s)                                https://bosh.io/docs/cli-v2#restart
   run-errand             Run errand                                         https://bosh.io/docs/cli-v2#run-errand
   runtime-config         Show current runtime config                        https://bosh.io/docs/cli-v2#runtime-config (aliases: rc)
   scp                    SCP to/from instance(s)                            https://bosh.io/docs/cli-v2#scp
   snapshots              List snapshots                                     https://bosh.io/docs/cli-v2#snapshots
   ssh                    SSH into instance(s)                               https://bosh.io/docs/cli-v2#ssh
   start                  Start instance(s)                                  https://bosh.io/docs/cli-v2#start
   stemcells              List stemcells                                     https://bosh.io/docs/cli-v2#stemcells (aliases: ss)
   stop                   Stop instance(s)                                   https://bosh.io/docs/cli-v2#stop
   sync-blobs             Sync blobs                                         https://bosh.io/docs/cli-v2#sync-blobs
   take-snapshot          Take snapshot                                      https://bosh.io/docs/cli-v2#take-snapshot
   task                   Show task status and start tracking its output     https://bosh.io/docs/cli-v2#task (aliases: t)
   tasks                  List running or recent tasks                       https://bosh.io/docs/cli-v2#tasks (aliases: ts)
   unignore               Unignore an instance                               https://bosh.io/docs/cli-v2#unignore
   update-cloud-config    Update current cloud config                        https://bosh.io/docs/cli-v2#update-cloud-config (aliases: ucc)
   update-config          Update config                                      https://bosh.io/docs/cli-v2#update-config (aliases: uc)
   update-cpi-config      Update current CPI config                          https://bosh.io/docs/cli-v2#update-cpi-config
   update-resurrection    Enable/disable resurrection                        https://bosh.io/docs/cli-v2#update-resurrection
   update-runtime-config  Update current runtime config                      https://bosh.io/docs/cli-v2#update-runtime-config (aliases: urc)
   upload-blobs           Upload blobs                                       https://bosh.io/docs/cli-v2#upload-blobs
   upload-release         Upload release                                     https://bosh.io/docs/cli-v2#upload-release (aliases: ur)
   upload-stemcell        Upload stemcell                                    https://bosh.io/docs/cli-v2#upload-stemcell (aliases: us)
   variables              List variables                                     https://bosh.io/docs/cli-v2#variables (aliases: vars)
   vendor-package         Vendor package                                     https://bosh.io/docs/cli-v2#vendor-package
   vms                    List all VMs in all deployments                    https://bosh.io/docs/cli-v2#vms

 Succeeded
#+END_EXAMPLE
** More Resources
https://github.com/bosh-tips/tips

http://engineering.pivotal.io/post/compiled-releases-for-pipelines/

License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].
#+BEGIN_HTML
<a href="https://www.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>
<a href="https://www.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/dns_small.png"></a>

<a href="https://www.linkedin.com/in/dennyzhang001"><img align="bottom" src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a>
<a href="https://github.com/dennyzhang"><img align="bottom"src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a>
<a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img align="bottom" src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet-bosh-A4}{GitHub: https://github.com/dennyzhang/cheatsheet-bosh-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-slack-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-bosh-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* DONE local notes                                                 :noexport:
** DONE bosh get manifest for a failed task                        :noexport:
   CLOSED: [2018-10-19 Fri 21:44]
** CANCELED bosh get deployment definition                         :noexport:
   CLOSED: [2018-10-19 Fri 21:44]
 get the command to re-run: create deployment
* TODO Contribute back the cheatsheet to bosh community            :noexport:
* TODO draw a bosh diagram                                         :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Update errand setting                                       :noexport:
https://bosh.io/docs/errands/
* DONE Login to vm and debug                                       :noexport:
  CLOSED: [2018-10-19 Fri 21:45]
* TODO bosh interpolate                                            :noexport:
* TODO bosh manifest                                               :noexport:
#+BEGIN_EXAMPLE
 kubo@jumper:~$  bosh manifest -d service-instance_1ee08f0f-2e8a-45f9-a1f8-5e0d608225b4
 Using environment '30.0.0.11' as client 'ops_manager'

 Using deployment 'service-instance_1ee08f0f-2e8a-45f9-a1f8-5e0d608225b4'

 ---
 addons:
 - name: bosh-dns-aliases
   jobs:
   - name: kubo-dns-aliases
     release: kubo
 name: service-instance_1ee08f0f-2e8a-45f9-a1f8-5e0d608225b4
 releases:
 - name: kubo
   version: 0.16.3
 - name: cfcr-etcd
   version: 1.0.2
 - name: docker
   version: 31.1.0
 - name: pks-nsx-t
   version: 0.9.0
 - name: pks-vrli
   version: 0.2.0
 - name: syslog-migration
   version: '10'
 - name: bpm
   version: 0.4.0
 - name: wavefront-proxy
   version: 0.3.0
 - name: pks-helpers
   version: 28.0.0
 stemcells:
 - alias: trusty
   os: ubuntu-trusty
   version: '3541.25'
 instance_groups:
 - name: apply-addons
   lifecycle: errand
   instances: 1
   jobs:
   - name: apply-specs
     release: kubo
     consumes:
       cloud-provider:
         from: master-cloud-provider
     properties:
       addons-spec: ''
       admin-password: EYX_b6qlSz0Ez7jNDql7GULX
       admin-username: admin
       api-token: "((kubelet-password))"
       authorization-mode: rbac
       tls:
         heapster: "((tls-heapster))"
         influxdb: "((tls-influxdb))"
         kubernetes: "((tls-kubernetes))"
         kubernetes-dashboard: "((tls-kubernetes-dashboard))"
   - name: syslog_forwarder
     release: syslog-migration
     properties:
       syslog:
         address: ''
         ca_cert:
         migration:
           disabled: false
         permitted_peer: ''
         port: '514'
         tls_enabled: false
         transport: tcp
   vm_type: micro
   stemcell: trusty
   azs:
   - az-1
   networks:
   - name: pks-1ee08f0f-2e8a-45f9-a1f8-5e0d608225b4-cluster-switch
 - name: master
   instances: 1
   jobs:
   - name: bpm
     release: bpm
   - name: kube-apiserver
     release: kubo
     consumes:
       cloud-provider:
         from: master-cloud-provider
     properties:
       admin-password: EYX_b6qlSz0Ez7jNDql7GULX
       admin-username: admin
       authorization-mode: rbac
       backend_port: 8443
       kube-controller-manager-password: "((kube-controller-manager-password))"
       kube-proxy-password: "((kube-proxy-password))"
       kube-scheduler-password: "((kube-scheduler-password))"
       kubelet-drain-password: "((kubelet-drain-password))"
       kubelet-password: "((kubelet-password))"
       port: 8443
       route-sync-password: "((route-sync-password))"
       service-account-public-key: "((service-account-key.public_key))"
       tls:
         kubernetes:
           ca: "((tls-kubernetes.ca))"
           certificate: "((tls-kubernetes.certificate))"
           private_key: "((tls-kubernetes.private_key))"
   - name: kube-controller-manager
     release: kubo
     consumes:
       cloud-provider:
         from: master-cloud-provider
     properties:
       api-token: "((kube-controller-manager-password))"
       service-account-private-key: "((service-account-key.private_key))"
       tls:
         kubernetes: "((tls-kubernetes))"
   - name: kube-scheduler
     release: kubo
     properties:
       api-token: "((kube-scheduler-password))"
       tls:
         kubernetes: "((tls-kubernetes))"
   - name: kubernetes-roles
     release: kubo
     consumes:
       cloud-provider:
         from: master-cloud-provider
     properties:
       admin-password: EYX_b6qlSz0Ez7jNDql7GULX
       admin-username: admin
       authorization-mode: rbac
       tls:
         kubernetes: "((tls-kubernetes))"
   - name: etcd
     release: cfcr-etcd
     properties:
       tls:
         etcd:
           ca: "((tls-etcd.ca))"
           certificate: "((tls-etcd.certificate))"
           private_key: "((tls-etcd.private_key))"
         etcdctl:
           ca: "((tls-etcdctl.ca))"
           certificate: "((tls-etcdctl.certificate))"
           private_key: "((tls-etcdctl.private_key))"
         peer:
           ca: "((tls-etcd.ca))"
           certificate: "((tls-etcd.certificate))"
           private_key: "((tls-etcd.private_key))"
   - name: cloud-provider
     release: kubo
     provides:
       cloud-provider:
         as: master-cloud-provider
     properties:
       cloud-provider:
         type: vsphere
         vsphere:
           datacenter: kubo-dc
           datastore: iscsi-ds-0
           insecure-flag: 1
           password: Admin!23
           server: 192.168.111.24
           user: administrator@vsphere.local
           vms: pcf_vms
           working-dir: "/kubo-dc/vm/pcf_vms/aca565a2-93be-4dc2-85dd-d7a512cc0dd7"
   - name: syslog_forwarder
     release: syslog-migration
     properties:
       syslog:
         address: ''
         ca_cert:
         migration:
           disabled: false
         permitted_peer: ''
         port: '514'
         tls_enabled: false
         transport: tcp
   - name: pks-nsx-t-resource-check
     release: pks-nsx-t
     properties:
       nsx-t-ca-cert: |-
         -----BEGIN CERTIFICATE-----
         MIIDZDCCAkygAwIBAgIGAWP3qchFMA0GCSqGSIb3DQEBCwUAMHMxJDAiBgNVBAMM
         G25zeG1hbmFnZXIucGtzLnZtd2FyZS5sb2NhbDEPMA0GA1UECgwGVk13YXJlMQww
         CgYDVQQLDANDTkExCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTESMBAGA1UEBwwJ
         UGFsbyBBbHRvMB4XDTE4MDYxMzA1NDEyOVoXDTIzMDYxMjA1NDEyOVowczEkMCIG
         A1UEAwwbbnN4bWFuYWdlci5wa3Mudm13YXJlLmxvY2FsMQ8wDQYDVQQKDAZWTXdh
         cmUxDDAKBgNVBAsMA0NOQTELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYD
         VQQHDAlQYWxvIEFsdG8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ
         XSVftNvRA2/jQP/UL1ACKb6qR5TDNTE83ehvoZdRZUMra+R89YaS0y0jfaLk4QT0
         jDGU/BPs6iR6HyivWwkwm8SGBxetyPkrR84UFKX9fJideRAU1TaYIc+NEn53hQjC
         e4YR0Be5+U+yT+N8j/J8kirFydKpIk7YHSDIi3Kpa96NeHb12MhzvmEDo3Ia8bEM
         X0oh3ZcNlCsmA2vAr8PBG4Q/ThvCG/xsWCuMTz/gKfjIn/twGl58xzH22bZsLSQN
         cHZuZalJC4qP71UCTdpnTh9N2Bmv9v05yZEqvd452NE2l0m5AlNLlGzbBn+mekZX
         5y47R6quaTdIpHNjrvw5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAK9mzSMZfzCs
         ZPRXd1WF+q+OKebmhJma64QjgRzuYqCs6WI7kUqTF2k2l3o5v8e2cnJKIbig89cD
         L7SmttBtHqdcHjKoMDujuqhCsrHntcLYYKc/cgrpQbUC8cL2eelSX0CTS4Ss2VlZ
         saNFwvJ0Yx8P0eDIQkJ3fP57nfe6vrgAQOdU/iqhfvCqhn3RPKVXbuQTdxdBBC0X
         8lVwa+gpSPjphOuoQvavQdi7yXB/V0ZR2a9ifEK2trrKpuMeZSaOMTbzWR3dsdCP
         aiHDurt8SBR77mTNf0NEmeTELe6NYzOshrYV/mwLgOvzCS7UCLb7PmfgiIk3DTdc
         9e3xcRutBgI=
         -----END CERTIFICATE-----
       nsx-t-host: nsxmanager.pks.vmware.local
       nsx-t-insecure: true
       nsx-t-password: Admin!23Admin
       nsx-t-user: admin
   - name: pks-nsx-t-floating-ip-association
     release: pks-nsx-t
     properties:
       cluster-name:
       floating-ip: 192.168.150.104
       floating-ip-pool-id: d0ece6ff-b7bb-4a55-bc22-f6ec0b7ca297
       master-ip:
       nsx-t-ca-cert: |-
         -----BEGIN CERTIFICATE-----
         MIIDZDCCAkygAwIBAgIGAWP3qchFMA0GCSqGSIb3DQEBCwUAMHMxJDAiBgNVBAMM
         G25zeG1hbmFnZXIucGtzLnZtd2FyZS5sb2NhbDEPMA0GA1UECgwGVk13YXJlMQww
         CgYDVQQLDANDTkExCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTESMBAGA1UEBwwJ
         UGFsbyBBbHRvMB4XDTE4MDYxMzA1NDEyOVoXDTIzMDYxMjA1NDEyOVowczEkMCIG
         A1UEAwwbbnN4bWFuYWdlci5wa3Mudm13YXJlLmxvY2FsMQ8wDQYDVQQKDAZWTXdh
         cmUxDDAKBgNVBAsMA0NOQTELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYD
         VQQHDAlQYWxvIEFsdG8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ
         XSVftNvRA2/jQP/UL1ACKb6qR5TDNTE83ehvoZdRZUMra+R89YaS0y0jfaLk4QT0
         jDGU/BPs6iR6HyivWwkwm8SGBxetyPkrR84UFKX9fJideRAU1TaYIc+NEn53hQjC
         e4YR0Be5+U+yT+N8j/J8kirFydKpIk7YHSDIi3Kpa96NeHb12MhzvmEDo3Ia8bEM
         X0oh3ZcNlCsmA2vAr8PBG4Q/ThvCG/xsWCuMTz/gKfjIn/twGl58xzH22bZsLSQN
         cHZuZalJC4qP71UCTdpnTh9N2Bmv9v05yZEqvd452NE2l0m5AlNLlGzbBn+mekZX
         5y47R6quaTdIpHNjrvw5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAK9mzSMZfzCs
         ZPRXd1WF+q+OKebmhJma64QjgRzuYqCs6WI7kUqTF2k2l3o5v8e2cnJKIbig89cD
         L7SmttBtHqdcHjKoMDujuqhCsrHntcLYYKc/cgrpQbUC8cL2eelSX0CTS4Ss2VlZ
         saNFwvJ0Yx8P0eDIQkJ3fP57nfe6vrgAQOdU/iqhfvCqhn3RPKVXbuQTdxdBBC0X
         8lVwa+gpSPjphOuoQvavQdi7yXB/V0ZR2a9ifEK2trrKpuMeZSaOMTbzWR3dsdCP
         aiHDurt8SBR77mTNf0NEmeTELe6NYzOshrYV/mwLgOvzCS7UCLb7PmfgiIk3DTdc
         9e3xcRutBgI=
         -----END CERTIFICATE-----
       nsx-t-host: nsxmanager.pks.vmware.local
       nsx-t-insecure: true
       nsx-t-password: Admin!23Admin
       nsx-t-user: admin
       release-floating-ip: false
       t0-router-id: 1748c98f-aeda-416f-b3bb-a60d1b37f441
   vm_type: medium
   stemcell: trusty
   persistent_disk_type: '10240'
   azs:
   - az-1
   networks:
   - name: pks-1ee08f0f-2e8a-45f9-a1f8-5e0d608225b4-cluster-switch
 - name: worker
   instances: 2
   jobs:
   - name: docker
     release: docker
     properties:
       bip: 172.17.0.1/24
       default_ulimits:
       - nofile=65536
       env: {}
       flannel: false
       ip_masq: false
       iptables: false
       log_level: error
       log_options:
       - max-size=128m
       - max-file=2
       storage_driver: overlay
       store_dir: "/var/vcap/store"
       tls_cacert: "((tls-docker.ca))"
       tls_cert: "((tls-docker.certificate))"
       tls_key: "((tls-docker.private_key))"
   - name: kubernetes-dependencies
     release: kubo
   - name: kubelet
     release: kubo
     consumes:
       cloud-provider:
         from: worker-cloud-provider
     properties:
       api-token: "((kubelet-password))"
       drain-api-token: "((kubelet-drain-password))"
       tls:
         kubelet: "((tls-kubelet))"
         kubernetes: "((tls-kubernetes))"
   - name: kube-proxy
     release: kubo
     properties:
       api-token: "((kube-proxy-password))"
       tls:
         kubernetes: "((tls-kubernetes))"
   - name: drain-cluster
     release: pks-helpers
   - name: cloud-provider
     release: kubo
     provides:
       cloud-provider:
         as: worker-cloud-provider
     properties:
       cloud-provider:
         type: vsphere
         vsphere:
           datacenter: kubo-dc
           datastore: iscsi-ds-0
           insecure-flag: 1
           password: Admin!23
           server: 192.168.111.24
           user: administrator@vsphere.local
           vms: pcf_vms
           working-dir: "/kubo-dc/vm/pcf_vms/aca565a2-93be-4dc2-85dd-d7a512cc0dd7"
   - name: syslog_forwarder
     release: syslog-migration
     properties:
       syslog:
         address: ''
         ca_cert:
         migration:
           disabled: false
         permitted_peer: ''
         port: '514'
         tls_enabled: false
         transport: tcp
   - name: nsx-pod-networking
     release: pks-nsx-t
   - name: ncp
     release: pks-nsx-t
     properties:
       authorization-mode: rbac
       nsx-t-ca-cert: |-
         -----BEGIN CERTIFICATE-----
         MIIDZDCCAkygAwIBAgIGAWP3qchFMA0GCSqGSIb3DQEBCwUAMHMxJDAiBgNVBAMM
         G25zeG1hbmFnZXIucGtzLnZtd2FyZS5sb2NhbDEPMA0GA1UECgwGVk13YXJlMQww
         CgYDVQQLDANDTkExCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTESMBAGA1UEBwwJ
         UGFsbyBBbHRvMB4XDTE4MDYxMzA1NDEyOVoXDTIzMDYxMjA1NDEyOVowczEkMCIG
         A1UEAwwbbnN4bWFuYWdlci5wa3Mudm13YXJlLmxvY2FsMQ8wDQYDVQQKDAZWTXdh
         cmUxDDAKBgNVBAsMA0NOQTELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYD
         VQQHDAlQYWxvIEFsdG8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ
         XSVftNvRA2/jQP/UL1ACKb6qR5TDNTE83ehvoZdRZUMra+R89YaS0y0jfaLk4QT0
         jDGU/BPs6iR6HyivWwkwm8SGBxetyPkrR84UFKX9fJideRAU1TaYIc+NEn53hQjC
         e4YR0Be5+U+yT+N8j/J8kirFydKpIk7YHSDIi3Kpa96NeHb12MhzvmEDo3Ia8bEM
         X0oh3ZcNlCsmA2vAr8PBG4Q/ThvCG/xsWCuMTz/gKfjIn/twGl58xzH22bZsLSQN
         cHZuZalJC4qP71UCTdpnTh9N2Bmv9v05yZEqvd452NE2l0m5AlNLlGzbBn+mekZX
         5y47R6quaTdIpHNjrvw5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAK9mzSMZfzCs
         ZPRXd1WF+q+OKebmhJma64QjgRzuYqCs6WI7kUqTF2k2l3o5v8e2cnJKIbig89cD
         L7SmttBtHqdcHjKoMDujuqhCsrHntcLYYKc/cgrpQbUC8cL2eelSX0CTS4Ss2VlZ
         saNFwvJ0Yx8P0eDIQkJ3fP57nfe6vrgAQOdU/iqhfvCqhn3RPKVXbuQTdxdBBC0X
         8lVwa+gpSPjphOuoQvavQdi7yXB/V0ZR2a9ifEK2trrKpuMeZSaOMTbzWR3dsdCP
         aiHDurt8SBR77mTNf0NEmeTELe6NYzOshrYV/mwLgOvzCS7UCLb7PmfgiIk3DTdc
         9e3xcRutBgI=
         -----END CERTIFICATE-----
       nsx-t-host: nsxmanager.pks.vmware.local
       nsx-t-insecure: true
       nsx-t-password: Admin!23Admin
       nsx-t-user: admin
       use-native-loadbalancer: true
   vm_type: medium
   stemcell: trusty
   persistent_disk_type: '10240'
   azs:
   - az-1
   networks:
   - name: pks-1ee08f0f-2e8a-45f9-a1f8-5e0d608225b4-cluster-switch
 update:
   canaries: 1
   canary_watch_time: 10000-300000
   update_watch_time: 10000-300000
   max_in_flight: 1
   serial: true
 properties:
   kubernetes-api-url: https://192.168.150.104:8443
   nsxt_network: true
 variables:
 - name: kubelet-password
   type: password
 - name: kubelet-drain-password
   type: password
 - name: kube-proxy-password
   type: password
 - name: kube-controller-manager-password
   type: password
 - name: kube-scheduler-password
   type: password
 - name: route-sync-password
   type: password
 - name: kubo_ca
   type: certificate
   options:
     common_name: ca
     is_ca: true
 - name: tls-kubelet
   type: certificate
   options:
     alternative_names: []
     ca: kubo_ca
     common_name: kubelet.cfcr.internal
     organization: system:nodes
 - name: tls-kubernetes
   type: certificate
   options:
     alternative_names:
     - 10.100.200.1
     - kubernetes
     - kubernetes.default
     - kubernetes.default.svc
     - kubernetes.default.svc.cluster.local
     - master.cfcr.internal
     - 192.168.150.104
     ca: "/p-bosh/psss-container-service-37f4102408dc7e3b4fcf/kubo_odb_ca"
     common_name: 192.168.150.104
     organization: system:masters
 - name: service-account-key
   type: rsa
 - name: tls-docker
   type: certificate
   options:
     ca: kubo_ca
     common_name: docker.cfcr.internal
 - name: tls-etcd
   type: certificate
   options:
     alternative_names:
     - master.cfcr.internal
     ca: kubo_ca
     common_name: master.cfcr.internal
     extended_key_usage:
     - client_auth
     - server_auth
 - name: tls-etcdctl
   type: certificate
   options:
     ca: kubo_ca
     common_name: etcdClient
     extended_key_usage:
     - client_auth
 - name: tls-heapster
   type: certificate
   options:
     alternative_names:
     - heapster.kube-system.svc.cluster.local
     ca: kubo_ca
     common_name: heapster
 - name: tls-influxdb
   type: certificate
   options:
     alternative_names: []
     ca: kubo_ca
     common_name: monitoring-influxdb
 - name: kubernetes-dashboard-ca
   type: certificate
   options:
     common_name: ca
     is_ca: true
 - name: tls-kubernetes-dashboard
   type: certificate
   options:
     alternative_names: []
     ca: kubernetes-dashboard-ca
     common_name: kubernetesdashboard.cfcr.internal
 features:
   use_dns_addresses: true

 Succeeded
#+END_EXAMPLE
* HALF bosh: /tmp/build/4dc76c32/github-kubo-deployment/kubo-deployment-0.19.0/kubo-deployment/manifests :noexport:
* HALF scenario: bosh how to tail a deployment                     :noexport:
#+BEGIN_EXAMPLE
ubuntu@opsman:~$ bosh tasks --recent=10
Using environment '30.0.0.11' as client 'ops_manager'

ID  State       Started At                    Last Activity At              User         Deployment                                      Description        Result
26  processing  Tue Oct  9 17:52:54 UTC 2018  Tue Oct  9 17:52:54 UTC 2018  ops_manager  pivotal-container-service-6114061bd13957604dcb  create deployment  -
25  done        Tue Oct  9 17:52:38 UTC 2018  Tue Oct  9 17:52:52 UTC 2018  ops_manager  -                                               create release     Created release 'wavefront-proxy/0.8.0'
24  done        Tue Oct  9 17:51:31 UTC 2018  Tue Oct  9 17:51:54 UTC 2018  ops_manager  -                                               create release     Created release 'backup-and-restore-sdk/1.8.0'
23  done        Tue Oct  9 17:50:44 UTC 2018  Tue Oct  9 17:50:52 UTC 2018  ops_manager  -                                               create release     Created release 'bpm/0.6.0'
22  done        Tue Oct  9 17:50:19 UTC 2018  Tue Oct  9 17:50:32 UTC 2018  ops_manager  -                                               create release     Created release 'uaa/60.2'
21  done        Tue Oct  9 17:49:57 UTC 2018  Tue Oct  9 17:50:02 UTC 2018  ops_manager  -                                               create release     Created release 'event-emitter/0.13.0'
20  done        Tue Oct  9 17:49:45 UTC 2018  Tue Oct  9 17:49:46 UTC 2018  ops_manager  -                                               create release     Created release 'pks-telemetry/0.9.2'
19  done        Tue Oct  9 17:49:38 UTC 2018  Tue Oct  9 17:49:43 UTC 2018  ops_manager  -                                               create release     Created release 'syslog-migration/11.1.1'
18  done        Tue Oct  9 17:49:29 UTC 2018  Tue Oct  9 17:49:30 UTC 2018  ops_manager  -                                               create release     Created release 'pks-vrli/0.6.0'
17  done        Tue Oct  9 17:49:14 UTC 2018  Tue Oct  9 17:49:25 UTC 2018  ops_manager  -                                               create release     Created release 'nsx-cf-cni/2.3.0.10066840'

10 tasks

Succeeded
ubuntu@opsman:~$ bosh tasks --recent=10^C
ubuntu@opsman:~$ bosh task -a
Using environment '30.0.0.11' as client 'ops_manager'

Task 26

Task 26 | 17:52:54 | Preparing deployment: Preparing deployment (00:00:10)
Task 26 | 17:53:17 | Preparing package compilation: Finding packages to compile (00:00:00)
Task 26 | 17:53:17 | Compiling packages: golang-1-linux/8fb48ae1b653b7d0b49d0cbcea856bb8da8a5700
Task 26 | 17:53:17 | Compiling packages: golang-1-linux/4f3c42aabef059e5de7860640cf39ff2b151ba32
Task 26 | 17:55:18 | Compiling packages: golang-1-linux/8fb48ae1b653b7d0b49d0cbcea856bb8da8a5700 (00:02:01)
Task 26 | 17:55:18 | Compiling packages: bosh-dns/138f3bd2440ba97f0a7d8912facb5d4a2b320850
Task 26 | 17:55:19 | Compiling packages: golang-1-linux/4f3c42aabef059e5de7860640cf39ff2b151ba32 (00:02:02)
Task 26 | 17:55:19 | Compiling packages: wavefront-alert/7ac3434157adbcd7dd2be99742f41413c6632189 (00:00:32)
Task 26 | 17:55:58 | Compiling packages: bosh-dns/138f3bd2440ba97f0a7d8912facb5d4a2b320850 (00:00:40)
Task 26 | 17:56:18 | Creating missing vms: pivotal-container-service/75361870-d03f-4afc-8303-6f8d301b8dce (0) (00:01:33)
Task 26 | 17:57:51 | Updating instance pivotal-container-service: pivotal-container-service/75361870-d03f-4afc-8303-6f8d301b8dce (0) (canary)
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Bosh build the local release and test against it            :noexport:
* TODO How bosh release and errand connect with each other?        :noexport:
* TODO what ops-files is: https://github.com/cloudfoundry-incubator/kubo-deployment/tree/998facf3e956c6d23e3723e013fccc05e0ec1ba9/manifests/ops-files :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO bosh where errand is stored?                                :noexport:
bosh -n upload-release /tmp/build/4dc76c32/pks-release/wavefront-proxy-0.8.0-dev.16.tgz

cd /tmp/a/jobs

tar -cvf wavefront-proxy-errand.tgz job.MF monit templates
rm -rf job.MF monit templates

cd ..

tar -cvf wavefront-proxy.tgz *

bosh -n upload-release /tmp/a/wavefront-proxy.tgz --skip-tls-validation

bosh -n -d wf-deployment-0-8-0-dev-16 run-errand wavefront-proxy-errand --keep-alive

om --target https://30.0.0.5 --username admin --password 'Admin!23' -k curl --request GET --data '' --path /api/v0/certificate_authorities -s
* TODO errand log convention                                       :noexport:
#+BEGIN_EXAMPLE
vrops-errands/018e9207-a308-4510-bc9b-c4784e839465:/var/vcap/sys/log$ ls -lth
total 16K
drwxrwx--- 2 vcap vcap 4.0K Oct  8 06:02 bosh-dns
drwxrwx--- 2 root vcap 4.0K Oct  8 06:02 kubo-dns-aliases
drwxrwx--- 2 root vcap 4.0K Oct  8 06:02 unregister
drwxrwx--- 2 root vcap 4.0K Oct  8 06:02 register
vrops-errands/018e9207-a308-4510-bc9b-c4784e839465:/var/vcap/sys/log$ cd ./register/
vrops-errands/018e9207-a308-4510-bc9b-c4784e839465:/var/vcap/sys/log/register$ ls
vrops-errands/018e9207-a308-4510-bc9b-c4784e839465:/var/vcap/sys/log/register$ ls -lth
total 0
vrops-errands/018e9207-a308-4510-bc9b-c4784e839465:/var/vcap/sys/log/register$ cd ..
vrops-errands/018e9207-a308-4510-bc9b-c4784e839465:/var/vcap/sys/log$ tree
-bash: tree: command not found
vrops-errands/018e9207-a308-4510-bc9b-c4784e839465:/var/vcap/sys/log$ ls -lth *reg*
unregister:
total 0

register:
total 0
#+END_EXAMPLE
* TODO scenario: how bosh detects a problematic vm (master/worker) and do the replacement :noexport:
* TODO [#A] scenario: bosh-dns workflow                            :noexport:
* TODO scenario: bosh upgrade vm workflow                          :noexport:
* TODO Bosh run an errand to get the manifest                      :noexport:
* TODO bosh upload-release error                                   :noexport:
#+BEGIN_EXAMPLE
kubo@jumper:/home/denny/wavefront-proxy-release$ bosh upload-release
Using environment '30.0.0.11' as client 'ops_manager'

######################################################## 100.00% 482.60 KiB/s 0s
Task 214

Task 214 | 03:14:07 | Extracting release: Extracting release (00:00:00)
Task 214 | 03:14:07 | Verifying manifest: Verifying manifest (00:00:00)
Task 214 | 03:14:07 | Error: release 'wavefront-proxy/0.8.0+dev.1' has already been uploaded with commit_hash as '721448a' and uncommitted_changes as 'false'

Task 214 Started  Wed Oct 24 03:14:07 UTC 2018
Task 214 Finished Wed Oct 24 03:14:07 UTC 2018
Task 214 Duration 00:00:00
Task 214 error

Uploading release file:
  Expected task '214' to succeed but state is 'error'

Exit code 1
#+END_EXAMPLE
